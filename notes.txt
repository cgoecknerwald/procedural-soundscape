- We've decided to use tone.js instead of audiosynth.js by Keith William Horwood. We also chose tone.js over SuperCollider, Flocking.js, PureData, because of web integration ease. Flocking also had web integration but a smaller online community and seemed less robust and less abstracted. Audiosynth.js did not have looping technologies. We briefly considered integrating with tone.js but it proved to be too difficult. 
- We looked at Karplus-Strong String Synthesis but determined it was only relevant if we used audiosynth.js. 
- Wheelibin's Synthaesthesia (drum kit and synths)
- Tambien's Jazz.Computer but they had a very strange music set-up with interpolation and mediators between synths. We attempted to replicate by playing mulitple synths simulataneously but the resulting 'piano' was very tinny and sounded like Scottish bagpipes.
- We looked into playing and modifying audiofiles (MP3s or WAVs) but the integration with Tone.js was too complicated.
- We discussed moving instruments synths into instruments.js
- Moving roots/scales/chord progressions/rhythms/min & max on octaves in chords.js
- https://github.com/Tonejs/Tone.js/issues/290 references why we can't use .wav files in Tone.js (simply not supported, it seems)
- https://github.com/nbrosowsky/tonejs-instruments (WAVs of publicly available instrument samples)
- https://medium.com/@lukepura/basics-of-making-music-with-tone-js-5b294a92b240